{% extends '@!EasyAdmin/crud/form_theme.html.twig' %}

{% block form_start %}
    {{ parent() }}
{% endblock %}

{% block form_end %}
    {{ parent() }}

    <link rel="stylesheet" href="https://unpkg.com/leaflet@1.9.4/dist/leaflet.css" />
    <script src="https://unpkg.com/leaflet@1.9.4/dist/leaflet.js"></script>
    {# map of locations #}
    <div id="map" style="width: 600px; height: 400px;"></div>
    <script type="text/javascript">
        var mymap = L.map('map').setView([48.6045, 2.3400], 14);
        L.tileLayer('https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png', {
            attribution: '© OpenStreetMap contributors'
        }).addTo(mymap);
        {# add the marker of the current location #}
        var currentMarker = null;
        var latitudeField = document.getElementById('EventLocation_latitude');
        var longitudeField = document.getElementById('EventLocation_longitude');
        var initialLatLng = null;
        if (latitudeField && longitudeField && latitudeField.value && longitudeField.value) {
        initialLatLng = [(latitudeField.value.replace(',', '.')), (longitudeField.value.replace(',', '.'))];
        currentMarker = L.marker(initialLatLng).addTo(mymap);
        } 
        {# add others existing markers #} 
        fetch('./api/eventLocation')
            .then(response => response.json())
            .then(data => {
                data.forEach(location => {
                    if (!initialLatLng || (location.latitude != initialLatLng[0] && location.longitude != initialLatLng[1])) {
                        var icon = L.icon({
                            iconUrl: '{{ asset('uploads/locations/') }}' + location.typeLocation.symbol,
                            iconSize: [24, 24],
                            iconAnchor: [12, 24],
                            popupAnchor: [0, -22]
                        });

                        L.marker([location.latitude, location.longitude], { icon: icon }).addTo(mymap)
                            .bindPopup('<strong>' + location.name + '</strong><br>' + location.description);
                    }
                });
            });

        {# Function to add a marker to the clicked location #}
        function onMapClick(e) {

        if (currentMarker) {
                currentMarker.remove();
        }

            currentMarker = L.marker(e.latlng).addTo(mymap);
            latitudeField.value = e.latlng.lat;
            longitudeField.value = e.latlng.lng;
        }
        mymap.on('click', onMapClick);
        
    </script>
    <div>
        Les champs marqués d'un astérisque (*) sont obligatoires
    </div>
{% endblock %}


